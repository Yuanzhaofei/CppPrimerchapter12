/*实现12.3节的文本查询程序
*要求：在给定文本中查询单词。
*查询结果：第一行为单词在文本中出现的次数，
*之后为所在行的列表，包括行号及每一行的内容，
*行按照升序排列，若一个单词在一行中出现多次，此行只出现一次*/

//实现过程
/*从需求入手，程序需要完成以下任务：
*接受一个文件名和一个想要查找的单词，
*从文件中一行一行的读入数据，且记录行号
*查询一行，递增单词出现的次数，
*如果该行中出现查找的单词，则输出行号，和该行内容*/

//利用标准库设施
/*保存文本的所有内容：可以使用vector<string>，每个string保存一行，string的下标加1为行号
*从每一行中读入每个单词，可以使用string stream流
*每个输入的待查询单词，查询的结果应该能够保存起来，这样便于查询大量单词后方便的回溯
*使用set保存单词出现的行号，使用map保存单词和其对应的行号*/

//数据结构
/*定义抽象的解决方案更加有效，例如需要查询多个文本中的多个单词，
*就需要合理的数据结构保存每个文本的查询结果，并批量化的输出结果
*为了保存一个输入文本和在这个文本中的查询结果，可以定义一个TextQuery类，
*该类的每个对象对应一个文本的查询；
*查询结果的输出较为复杂，也要定义一个类QueryResult*/

//类设计思路
/*设计类时，可以先编写函数使用这个类，检查类是否具有我们需要的成员*/

//TextQuery类的成员函数void query(const string&)，应该返回一个智能指针，传入QueryResult类中用于打印查询结果；